version: "3.9"

services:
  reverseproxy:
    build:
      context: ./infra/nginx
    restart: always
    container_name: reverseproxy
    ports:
      - "443:443"
    depends_on:
      - vault
      - vault-alpha
      - vault-bravo
    volumes:
      - ${PWD}/infra/vault-cluster/certs/server-cert.pem:/etc/ssl/certs/server-cert.pem
      - ${PWD}/infra/vault-cluster/certs/server-key.pem:/etc/ssl/private/server-key.pem

  vault:
    build:
      context: ./infra/vault-cluster/vault
    restart: always
    container_name: vault
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8200:8200"
    env_file:
      - ./infra/vault-cluster/.env
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ${PWD}/infra/vault-cluster/certs:/vault/certs:ro
      - vault_raft:/vault/data

  vault-alpha:
    build:
      context: ./infra/vault-cluster/vault-alpha
    restart: always
    container_name: vault-alpha
    env_file:
      - ./infra/vault-cluster/.env
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ${PWD}/infra/vault-cluster/certs:/vault/certs:ro
      - vault_alpha_raft:/vault/data

  vault-bravo:
    build:
      context: ./infra/vault-cluster/vault-bravo
    restart: always
    container_name: vault-bravo
    env_file:
      - ./infra/vault-cluster/.env
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ${PWD}/infra/vault-cluster/certs:/vault/certs:ro
      - vault_bravo_raft:/vault/data

  # vault transit autounseal token must be use by other vaults
  vault-transit:
    build:
      context: ./infra/vault-cluster/vault-transit
    restart: always
    container_name: vault-transit
    env_file:
      - ./infra/vault-cluster/.env
    cap_add:
      - IPC_LOCK
    volumes:
      - ${PWD}/infra/vault-cluster/certs:/vault/certs:ro
      - vault_transit_file:/vault/data

  postgres:
    build:
      context: ./infra/postgres
    restart: on-failure
    container_name: postgres
    ports:
      - 5432:5432
    env_file:
      - ./infra/postgres/.env
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U admin -d handouceur'"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - ${PWD}/infra/postgres/certs/:/var/lib/postgresql/certs/:ro

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin4
    ports:
      - 5555:80
    env_file:
      - ./infra/postgres/.env

volumes:
  vault_alpha_raft:
  vault_bravo_raft:
  vault_raft:
  vault_transit_file:
