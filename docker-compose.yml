version: "3.9"

services:
  load-balancer:
    image: nginx:latest
    restart: always
    container_name: load-balancer
    ports:
      - "80:80"
    depends_on:
      - vault-master
      - vault-alpha
      - vault-bravo
      - vault-charlie
    volumes:
      - ${PWD}/infra/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

  vault-alpha:
    image: hashicorp/vault:latest
    restart: always
    container_name: vault-alpha
    env_file:
      - ./infra/vault-cluster/.env
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    entrypoint: ["vault", "server", "-config=/vault/config/config.hcl"]
    volumes:
      - ${PWD}/infra/vault-cluster/certs:/vault/certs
      - ${PWD}/infra/vault-cluster/vault-slaves/config-alpha.hcl:/vault/config/config.hcl
      - vault_alpha:/vault/data

  vault-bravo:
    image: hashicorp/vault:latest
    restart: always
    container_name: vault-bravo
    env_file:
      - ./infra/vault-cluster/.env
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    entrypoint: ["vault", "server", "-config=/vault/config/config.hcl"]
    volumes:
      - ${PWD}/infra/vault-cluster/certs:/vault/certs
      - ${PWD}/infra/vault-cluster/vault-slaves/config-bravo.hcl:/vault/config/config.hcl
      - vault_bravo:/vault/data

  vault-charlie:
    image: hashicorp/vault:latest
    restart: always
    container_name: vault-charlie
    env_file:
      - ./infra/vault-cluster/.env
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    entrypoint: ["vault", "server", "-config=/vault/config/config.hcl"]
    volumes:
      - ${PWD}/infra/vault-cluster/certs:/vault/certs
      - ${PWD}/infra/vault-cluster/vault-slaves/config-charlie.hcl:/vault/config/config.hcl
      - vault_charlie:/vault/data

  # vault master token must be use to auto unseal slaves
  vault-master:
    build:
      context: ./infra/vault-cluster/vault-master
    restart: always
    container_name: vault-master
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8200:8200"
    env_file:
      - ./infra/vault-cluster/.env
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ${PWD}/infra/vault-cluster/certs:/vault/certs
      - vault_master_raft:/vault/data

  # vault transit autounseal token must be use by vault master
  vault-transit:
    build:
      context: ./infra/vault-cluster/vault-transit
    restart: always
    container_name: vault-transit
    env_file:
      - ./infra/vault-cluster/.env
    cap_add:
      - IPC_LOCK
    volumes:
      - ${PWD}/infra/vault-cluster/certs:/vault/certs:ro
      - vault_transit_file:/vault/data

  postgres:
    image: postgres:latest
    restart: on-failure
    container_name: postgres
    ports:
      - 5432:5432
    env_file:
      - ./infra/postgres/.env
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U admin -d handouceur'"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - ${PWD}/infra/postgres/init:/docker-entrypoint-initdb.d:ro
      - ${PWD}/infra/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ${PWD}/infra/postgres/certs/:/var/lib/postgresql/certs/:ro

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin4
    ports:
      - 5555:80
    env_file:
      - ./infra/postgres/.env

volumes:
  vault_alpha:
  vault_bravo:
  vault_charlie:
  vault_master_raft:
  vault_transit_file:
